{"ast":null,"code":"export var BASE_URL='https://velichkoo.nomoredomains.monster';// const BASE_URL = 'http://localhost:3000';\nvar checkResponse=function checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));};export var register=function register(password,email){return fetch(\"\".concat(BASE_URL,\"/signup\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(checkResponse);};export var login=function login(password,email){return fetch(\"\".concat(BASE_URL,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})}).then(checkResponse);};export var checkToken=function checkToken(token){return fetch(\"\".concat(BASE_URL,\"/users/me\"),{method:'GET',headers:{'Accept':'application/json','Content-Type':'application/json','Authorization':\"Bearer \".concat(token)}}).then(checkResponse);};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","password","email","fetch","method","headers","body","JSON","stringify","then","login","checkToken","token"],"sources":["C:/Users/Kate/Desktop/Projects/react-mesto-api-full-gha/frontend/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://velichkoo.nomoredomains.monster';\r\n// const BASE_URL = 'http://localhost:3000';\r\n\r\nconst checkResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport const register = (password, email) => {\r\n\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      password,\r\n      email,\r\n    })\r\n  })\r\n    .then(checkResponse)\r\n}\r\n\r\nexport const login = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      password,\r\n      email,\r\n    })\r\n  })\r\n    .then(checkResponse)\r\n}\r\n\r\nexport const checkToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  })\r\n    .then(checkResponse)\r\n}\r\n"],"mappings":"AAAA,MAAO,IAAMA,SAAQ,CAAG,yCAAyC,CACjE;AAEA,GAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAIC,GAAG,CAAK,CAC7B,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAOD,IAAG,CAACE,IAAI,EAAE,CACnB,CACA,MAAOC,QAAO,CAACC,MAAM,iDAAYJ,GAAG,CAACK,MAAM,EAAG,CAChD,CAAC,CAED,MAAO,IAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,QAAQ,CAAEC,KAAK,CAAK,CAE3C,MAAOC,MAAK,WAAIX,QAAQ,YAAW,CACjCY,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBP,QAAQ,CAARA,QAAQ,CACRC,KAAK,CAALA,KACF,CAAC,CACH,CAAC,CAAC,CACCO,IAAI,CAAChB,aAAa,CAAC,CACxB,CAAC,CAED,MAAO,IAAMiB,MAAK,CAAG,QAARA,MAAK,CAAIT,QAAQ,CAAEC,KAAK,CAAK,CACxC,MAAOC,MAAK,WAAIX,QAAQ,YAAW,CACjCY,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBP,QAAQ,CAARA,QAAQ,CACRC,KAAK,CAALA,KACF,CAAC,CACH,CAAC,CAAC,CACCO,IAAI,CAAChB,aAAa,CAAC,CACxB,CAAC,CAED,MAAO,IAAMkB,WAAU,CAAG,QAAbA,WAAU,CAAIC,KAAK,CAAK,CACnC,MAAOT,MAAK,WAAIX,QAAQ,cAAa,CACnCY,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBAAkB,CAClC,eAAe,kBAAYO,KAAK,CAClC,CACF,CAAC,CAAC,CACCH,IAAI,CAAChB,aAAa,CAAC,CACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}