{"ast":null,"code":"export const BASE_URL = 'https://velichko.nomoredomains.monster';\n// const BASE_URL = 'http://localhost:3000';\n\nconst checkResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n};\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkResponse);\n};\nexport const login = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(checkResponse);\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};","map":{"version":3,"names":["BASE_URL","checkResponse","res","ok","json","Promise","reject","status","register","password","email","fetch","headers","body","JSON","stringify","then","login","method","checkToken","token"],"sources":["C:/Users/Kate/Desktop/Projects/react-mesto-api-full-gha/frontend/src/utils/Auth.js"],"sourcesContent":["export const BASE_URL = 'https://velichko.nomoredomains.monster';\r\n// const BASE_URL = 'http://localhost:3000';\r\n\r\nconst checkResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport const register = (password, email) => {\r\n\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      password,\r\n      email,\r\n    })\r\n  })\r\n    .then(checkResponse)\r\n}\r\n\r\nexport const login = (password, email) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      password,\r\n      email,\r\n    })\r\n  })\r\n    .then(checkResponse)\r\n}\r\n\r\nexport const checkToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  })\r\n    .then(checkResponse)\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,wCAAwC;AAChE;;AAEA,MAAMC,aAAa,GAAIC,GAAG,IAAK;EAC7B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;AAChD,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAQ,EAAEC,KAAK,KAAK;EAE3C,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCY,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBN,QAAQ;MACRC;IACF,CAAC;EACH,CAAC,CAAC,CACCM,IAAI,CAACf,aAAa,CAAC;AACxB,CAAC;AAED,OAAO,MAAMgB,KAAK,GAAG,CAACR,QAAQ,EAAEC,KAAK,KAAK;EACxC,OAAOC,KAAK,CAAE,GAAEX,QAAS,SAAQ,EAAE;IACjCkB,MAAM,EAAE,MAAM;IACdN,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBN,QAAQ;MACRC;IACF,CAAC;EACH,CAAC,CAAC,CACCM,IAAI,CAACf,aAAa,CAAC;AACxB,CAAC;AAED,OAAO,MAAMkB,UAAU,GAAIC,KAAK,IAAK;EACnC,OAAOT,KAAK,CAAE,GAAEX,QAAS,WAAU,EAAE;IACnCkB,MAAM,EAAE,KAAK;IACbN,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASQ,KAAM;IACnC;EACF,CAAC,CAAC,CACCJ,IAAI,CAACf,aAAa,CAAC;AACxB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}